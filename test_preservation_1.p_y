import requests
import smtplib
import base64
import csv
import os, random, string
import datetime
import json
import urllib.parse
import configparser
import hashlib
from requests_toolbelt import MultipartEncoder
import pprint


# varibili input company
file_config = 'Visura'
company_title = 'company test 3 CCare'
sigla_company = 'TST3'
atto_affido = 'file_to_upload\\sub_1\\atto_di_affido_test_$%.pdf'

config = configparser.ConfigParser()
config.read(f'{file_config}.ini')

###variabili_company_group_ini

endpoint_auth = config['environment_endpoint']['endpoint_auth']
endpoint_mng_core = config['environment_endpoint']['endpoint_mng_core']
endpoint_mng_business = config['environment_endpoint']['endpoint_mng_business']
user_company_group_mng = config['company_group']['user_company_group_mng']
secret_company_group_mng = config['company_group']['secret_company_group_mng']
user_company_group_end = config['company_group']['user_company_group_end']
secret_company_group_end = config['company_group']['secret_company_group_end']
company_group = config['company_group']['company_group']
country = config['company_group']['country']





# generazione psw
auth_string = f'{user_company_group_end}:{secret_company_group_end}'
auth_string_b64 = base64.b64encode(auth_string.encode('ascii'))
#print(auth_string_b64)


payload = 'grant_type=client_credentials'
headers = {
  'authorization': 'Basic %s' % auth_string_b64.decode("utf-8"),
  'Content-Type': 'application/x-www-form-urlencoded'
}
#print (headers)

auth_request = requests.request("POST", endpoint_auth, headers=headers, data=payload)

print(f'autenticazione manager codice {auth_request.status_code}')
#print(auth_request.text)
if auth_request.status_code == 200:
  auth_request_json = auth_request.json()
  access_token_mng = auth_request_json['access_token']
  #print (access_token_mng)
else :
  print(f'{auth_request.status_code} - {auth_request.text}')
  exit()

atto_affido_split = (atto_affido.rsplit('\\',1)[-1])## seleziona ultimo elemento dello split
print (atto_affido_split)


print(f'### Preservation {atto_affido_split}')

now = datetime.datetime.now()
tstamp_now = (f'{now.year}-{now.month:02d}-{now.day:02d} {now.hour:02d}:{now.minute:02d}:{now.second:02d}')

doc_identifier = f'{company_title}_safe_4'
file_data = open(atto_affido, "rb").read()
file_hash = hashlib.sha256(file_data).hexdigest()
encoded = base64.b64encode(file_hash.encode('ascii'))

fingerprint = encoded.decode("utf-8")

upload_json = {
    "doc_identifier": f"{doc_identifier}",
    "doc_algorithm": "SHA-256",
    "doc_fingerprint": f"{fingerprint}",
    "doc_creation_mode": "a",
    "doc_type": "SET contrattuale servizio Safe LTA",
    "doc_preservation_time": "10",
    "doc_type_flow": "I",
    "doc_no_registry_type": "Nessuno",
    "doc_no_registry_datetime": f"{tstamp_now}",
    "doc_no_registry_code": f"{company_title}",
    "doc_tag_object": f"{company_title}",
    "role_author_legal.0.denomination": f"{company_title}",
    "role_recipient_legal.0.denomination": "Infocert SpA",
    "doc_reserved": "true",
    "doc_format": "PDF",
    "doc_digital_signed_flag": "true",
    "doc_digital_timestamp_flag": "false",
    "doc_digital_eseal_flag": "false",
    "doc_compliance_copies_flag": "false",
    "doc_name": f"Ciao.pdf",
    "doc_version": "1"
}
data = {"attributes": json.dumps(upload_json)}

files = {
    "file": (f"{atto_affido_split}", open(f'{atto_affido}', 'rb'), 'application/pdf'),
    # "attributes": json.dumps(upload_json)
}

m = MultipartEncoder(
    fields={'attributes': json.dumps(upload_json),
            'file': (f'{atto_affido_split}', open(f'{atto_affido}', 'rb').read(), 'application/pdf')}
)
headers = {
    'Authorization': f'BEARER {auth_request_json["access_token"]}',
    #'Content-Type': m.content_type
}

document_classes = "SET contrattuale servizio Safe LTA"
url = f"{endpoint_mng_business}/v1/ingestions/companies/{company_title}/documentClasses/{document_classes}?title=Ciao.pdf&mimeType=application/pdf&producer=YYI9327&submitter=YYI9327"
# r = requests.post(url, data=data,files=files, headers=headers)
r = requests.post(url, files=files, data=data, headers=headers)
#r = requests.post(url, data=m, headers=headers)


if r.status_code == 201:
    print(f'Conservazione {atto_affido_split} OK')
    print (f'{r.text}')
    preservation_atto_affido_request_json = r.json()
    #company_id = gen_company_request_json['id']
    #print (f'company_id : {company_id}')
    #company_accountCode = gen_company_request_json['accountCode']
    #print (f'company_accountCode : {company_accountCode}')
else :
    print(f'{r.status_code} - {r.text}')
    exit()


